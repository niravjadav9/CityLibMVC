@model System.Collections.Generic.List<Liberary_Management.SearchBookBy_Result>

@{
    var filterOptions = new List<SelectListItem>();
    filterOptions.Add(new SelectListItem { Text = "ID", Value = "1", Selected = true });
    filterOptions.Add(new SelectListItem { Text = "Title", Value = "2" });
    filterOptions.Add(new SelectListItem { Text = "Publisher", Value = "3" });
}

<div class="form-group row flex-v-center">
    <div class="col-xs-3 col-sm-2">
        <label for="from">Search book by</label>
    </div>
    <div class="col-xs-3">
        <p class="input-group">
            @Html.DropDownList("BookSearchOption", filterOptions, new { @class = "form-control", @id = "drpBookSearchOption" })
        </p>
        </div>
    <div class="col-xs-3">
        <p class="input-group">
            <input type="text" name="txtSearch" id="txtSearch" />
        </p>
    </div>
    <div class="col-xs-1 text-center">
        <input type="button" class="btn btn-default" value="Search" id="btnSearchBooks" />
    </div>
</div>

<div class="row" id="divResult">
    <table class="table table-condensed" id="tblSearchResult">
        <thead>
            <th>Book Id</th>
            <th>ISBN</th>
            <th>Book Title</th>
            <th>Author Name</th>
            <th>Publisher Name</th>
            <th>Publish Date</th>
        </thead>
        <tbody>

        </tbody>
    </table>
</div>

<script>
    var dtTable;

    $(document).ready(function () {
        dtTable = $('#tblSearchResult').DataTable({
            "data": [],
            "columns": [
                { "data": "BookId" },
                { "data": "ISBN" },
                { "data": "BookTitle" },
                { "data": "AuthorName" },
                { "data": "PublisherName" },
                { "data": "PublicationDate" }
            ]
        });
    });

    $('#btnSearchBooks').click(function () {
        var optionValue = $('#drpBookSearchOption').val();
        var searchValue = $('#txtSearch').val();
        var strData = { option: optionValue, data: searchValue };
        var siteURL = '@Url.Action("SearchByBook", "ReaderFunction")';

        

        callbackSuccess = function (data) {
            if (typeof data !== "undefined" && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    data[i].PublicationDate = parseJsonDate(data[i].PublicationDate)
                }
            }
            dtTable.clear().draw();
            dtTable.rows.add(data).draw();
        }

        callbackError = function (response) {
            console.error(response);
        }

        ajaxPOST(siteURL, strData, callbackSuccess, 'Reader Function', callbackError);
    });
</script>